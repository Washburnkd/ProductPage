@using ProductPage.Data

@{
    ViewData["Title"] = "ie";
    var offer = Model as OfferModel;
    //var xforms = Model as List<XForm>;
    /*var uploads = */
    //struct contextVar
    //{
    //    int x;

    //    var uploads = Model as List<Upload>;
    //    var xforms = Model as List<XForm>;
    //};
    //var xforms = Model as List<XForm>;
    //var xforms = Model as List<XForm>;
}
@{
}

<h1>ie</h1>



<style>
    .SIDcard {
        position: relative;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid rgba(0, 0, 0, 0.125);
        border-radius: 0.25rem;
    }
    .grid-main {
        display: grid;
        grid-template-columns: 'imageUpload auto auto' 'canvas xform-list upload-list' 'selection-list xform-list upload-list' 'xformselection-list auto auto';
        grid-gap: 10px;
    }

    .imageUpload {
        grid-area: imageUpload;
    }

    .canvas {
        grid-area: canvas;
        margin: 5px;
        margin-left: 0px;
    }

    .xform-list {
        grid-area: xform-list;
    }

    .selection-list {
        grid-area: selection-list;
    }

    .xformselection-list {
        grid-area: xformselection-list;
    }

    .upload-list {
        grid-area: upload-list;
    }

    .soid_row {
        display: flex;
    }

    /*.soid_row > td {
            margin: 5px;
    }*/

    .xform-row {
        display: flex;
    }

    .xform_row > td {
        margin: 5px;
    }

    .XFImg {
        top: 150;
        Left: 150;
        height: 100px;
        width: 100px;
        position: absolute;
        background-color: none;
        object-fit: contain;
        cursor: move;
        -webkit-user-drag: none;
        -khtml-user-drag: none;
        -moz-user-drag: none;
        -o-user-drag: none;
        user-drag: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -o-user-select: no user-select: none;
    }

        .XFImg:hover {
            opacity: 0.7;
            z-index: 2000;
        }

    .image01 {
        height: 100%;
        width: 100%;
        /*        object-fit:inherit;*/
        transform: rotate(0deg);
    }

    img {
        -webkit-user-drag: none;
        -khtml-user-drag: none;
        -moz-user-drag: none;
        -o-user-drag: none;
        user-drag: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -o-user-select: none;
        user-select: none;
    }

    .drag {
        position: absolute;
        width: 5px;
        height: 5px;
        border: thin;
        background-color: none;
        z-index: 2;
        border-style: solid;
        border-color: cornflowerblue;
    }


        .drag.nw {
            position: absolute;
            top: -1px;
            left: -1px;
            cursor: nw-resize;
            border-bottom-style: none;
            border-right-style: none;
        }

        .drag.n {
            position: absolute;
            top: -1px;
            left: 50%;
            cursor: n-resize;
            border-bottom-style: none;
            border-right-style: none;
            border-left-style: none;
        }

        .drag.ne {
            position: absolute;
            top: -1px;
            right: -1px;
            cursor: ne-resize;
            border-bottom-style: none;
            border-left-style: none;
        }

        .drag.e {
            position: absolute;
            top: 50%;
            right: -1px;
            cursor: e-resize;
            border-top-style: none;
            border-bottom-style: none;
            border-left-style: none;
        }

        .drag.se {
            position: absolute;
            bottom: -1px;
            right: -1px;
            cursor: se-resize;
            border-top-style: none;
            border-left-style: none;
        }

        .drag.s {
            position: absolute;
            bottom: -1px;
            left: 50%;
            cursor: s-resize;
            border-top-style: none;
            border-right-style: none;
            border-left-style: none;
        }

        .drag.sw {
            position: absolute;
            bottom: -1px;
            left: -1px;
            cursor: sw-resize;
            border-top-style: none;
            border-right-style: none;
        }

        .drag.w {
            position: absolute;
            top: 50%;
            left: -1px;
            cursor: w-resize;
            border-top-style: none;
            border-bottom-style: none;
            border-right-style: none;
        }

        .drag.sc {
            position: absolute;
            bottom: 8px;
            right: 8px;
            cursor: grab;
            border-radius: 5px;
            background-color: tomato;
            border-style: none;
        }

        .drag.rt {
            position: absolute;
            top: -15px;
            left: 50%;
            cursor: grab;
            border-radius: 5px;
            background-color: none;
            border: double;
            border-color: cornflowerblue;
            border-bottom-style: none;
        }

    .canvas {
        border: 3px solid dodgerblue;
        height: 20rem;
        width: 20rem;
        float: left;
    }

    .upload-list {
        /*float: right;*/
    }

    .xform-thumbnail {
        width: 100px;
    }

    .soid_row {
        cursor: pointer;
    }

    /*    #bob {
        color:red;
    }

    [data-xid="6"] {
        color:purple;
        background-color:yellow;
    }

    .xform-list > [data-xid] {
        color:green;
        background-color:pink;
    }*/
</style>

<table>
    <tr>

        <td style="vertical-align:top">

            @*------------------------------   Column 1  -------------------------------*@
            <div class="canvas">

                @foreach (var u in offer.XForms)
                {
                    @if (u.XID >= 0)
                    {

                        <div class="XFImg" id="XFImg_@u.XID" data-xid="@u.XID" data-rotation="@u.Rotation" style="position:absolute; top:@(u.Top)px; left:@(u.Left)px;  height:@(u.Height)px; width:@(u.Width)px; opacity:@u.Transparency; z-index:@u.ZOrder" transform:rotate(@(u.Rotation)deg);">
                            @*; left: @u.Left; top: @u.Top; height: @u.Height; width: @u.Width;*@
                            <div class="drag nw" data-dxid="@u.XID"></div>
                            <div class="drag n" data-dxid="@u.XID"></div>
                            <div class="drag ne" data-dxid="@u.XID"></div>
                            <div class="drag e" data-dxid="@u.XID"></div>
                            <div class="drag se" data-dxid="@u.XID"></div>
                            <div class="drag s" data-dxid="@u.XID"></div>
                            <div class="drag sw" data-dxid="@u.XID"></div>
                            <div class="drag w" data-dxid="@u.XID"></div>
                            <div class="drag sc" data-dxid="@u.XID"></div>
                            <div class="drag rt" data-dxid="@u.XID"></div>
                            @if (u.UID != null && u.UID > 0)
                            {
                                <img src="~/img/@offer.Uploads.FirstOrDefault(x => x.UID == u.UID).Name" class="image01" alt="...">
                            }
                            else
                            {
                                <img src="..." class="image01" alt="...">
                            }
                        </div>
                    }
                }
            </div>

            <div style="height:3rem;">

            </div>

            <div class="SIDcards" ID="ItemSID" data-ItemSelID="0">

                @foreach (var s in offer.Selections)
                {
                    <div id="sid_@s.SID" class="SIDcard" data-sid="@s.SID" data-soid="1" data-sel="0" style="width: 18rem;">
                        @*@uploads.UploadList.FirstOrDefault(x => x.UID == s.UID).Name*@
                        <span style="display: flex; flex-wrap: nowrap;"> <a style="padding: 0px 1px"><i class="fas fa-trash-alt" style="color:dodgerblue;"></i></a> <a href="#" style="padding: 0px 1px"><i class="fas fa-edit" style="color:dodgerblue;"></i></a> @s.Option </span>
                        <table>
                            @foreach (var o in offer.SelectionOptions)
                            {
                                if (o.SID == s.SID)
                                {
                                    <tr id="soid_@o.SOID" class="soid_row" onclick="selectSOID(@s.SID, @o.SOID)">
                                        <td>
                                            <a onclick="deleteSelectionOption(@o.SOID);"><i class="fas fa-trash-alt" style="color:dodgerblue;"></i></a>
                                        </td>
                                        <td id="soid_edit_button_@o.SOID">
                                            <a onclick="editSelectionOption('soid', @o.SOID);"><i class="fas fa-edit" style="color:dodgerblue;"></i></a>
                                        </td>
                                        <td id="soid_save_button_@o.SOID" style="display:none;">
                                            <a onclick="saveSelectionOption('soid', @o.SOID);"><i class="fas fa-save" style="color:dodgerblue;"></i></a>
                                        </td>
                                        <td>
                                            <span id="soid_display_@o.SOID">@o.OName</span>
                                            <span id="soid_edit_@o.SOID" style="display:none;"><input id="soid_input_@o.SOID" type="text" value="@o.OName" /></span>
                                        </td>

                                    </tr>
                                }
                            }
                            <tr>
                                <td>
                                    <a><i class="fas fa-plus-square" style="color:dodgerblue;"></i></a>
                                </td>
                            </tr>
                        </table>
                    </div>
                }
                <div><a href="#"><i class="fas fa-plus-square" style="color:dodgerblue;"></i> add</a></div>
            </div>

            <div style="height:2rem;">

            </div>

            <div class="ItemList" id="ItemList">
                <table>

                    @foreach (var u in offer.Items)
                    {
                    <tr>
                        <td>
                            <div class="card" id="@u.Selections" data-iid="@u.IID" data-ItemXForm="@u.Selections" data-XFormSel="@u.XFormSel" style="width:3rem; height:3rem; margin-right: 10px;">
                                <a>@u.IID</a>
                            </div>
                        </td>
                            @*@foreach (var SOIDstr in @offer.Items.FirstOrDefault(x => x.IID == u.IID).Selections.Split(','))*@
                            @foreach (var s in offer.ItemSelections.Where(m => m.IID == u.IID))
                            {
                                <td>
                                    @offer.SelectionOptions.FirstOrDefault(x => x.SOID == s.SOID).OName
                                </td>
                            }
                        </tr>
                    }

                </table>
            </div>

        </td>

        <td style="vertical-align:top">

            @*------------------------------   Column 2  -------------------------------*@
            <!-- TRANSFORM ITEMS IN THE OFFER -->
            <div>
                <a href="#" onclick="saveXForms()">SAVE BUTTON</a>
            </div>


            <div class="xform-list">
                @foreach (var u in offer.XForms)
                {
                    <div class="XIDcard" ID="XIDcard_@u.XID" data-xid="@u.XID" data-ixbit="@u.IXbit" style="border:solid; border-color:ActiveBorder; display:flex; flex-wrap:nowrap;" draggable="true">
                        @if (u.UID != null && u.UID > 0)
                        {
                            <table>
                                <tr id="xid_@u.XID" class="xid_row">
                                    <td id="xid_visible_button_@u.XID" style="display:none; width:2rem;">
                                        <a onclick="visibleSelectionOption('xid', @u.XID);"><i class="far fa-eye" style="color:chartreuse;"></i></a>
                                    </td>
                                    <td id="xid_hidden_button_@u.XID" style="width:2rem;">
                                        <a onclick="hiddenSelectionOption('xid', @u.XID);"><i class="far fa-eye-slash" style="color:darkgray;"></i></a>
                                    </td>
                                </tr>
                            </table>

                            <img src="~/img/@offer.Uploads.FirstOrDefault(x=>x.UID==u.UID).Name" class="xform-thumbnail" alt="...">

                            <Table style="justify-items:right; margin-left:10px">
                                <tr class="xform-row">
                                    <td style="width:1rem">
                                        <a>   T </a>
                                    </td>
                                    <td>
                                        <input type="text" id="InputT_@u.XID" style="width:3rem" value="@u.Top" onchange="updateXForms(@u.XID)"/>
                                    </td>
                                    <td style="width:1rem; margin-left:5px">
                                        <a>   W </a>
                                    </td>
                                    <td>
                                        <input type="text" id="InputW_@u.XID" style="width:3rem" value="@u.Width" onchange="updateXForms(@u.XID)"/>
                                    </td>
                                    <td style="width:1rem; margin-left:5px">
                                        <a>   R </a>
                                    </td>
                                    <td>
                                        <input type="text" id="InputR_@u.XID" style="width:3rem" value="@u.Rotation" onchange="updateXForms(@u.XID)"/>
                                    </td>
                                </tr>
                                <tr class="xform-row">
                                    <td style="width:1rem">
                                        <a>   L </a>
                                    </td>
                                    <td>
                                        <input type="text" id="InputL_@u.XID" style="width:3rem" value="@u.Left" onchange="updateXForms(@u.XID)"/>
                                    </td>
                                    <td style="width:1rem; margin-left:5px">
                                        <a>   H </a>
                                    </td>
                                    <td>
                                        <input type="text" id="InputH_@u.XID" style="width:3rem" value="@u.Height" onchange="updateXForms(@u.XID)"/>
                                    </td>
                                    <td style="width:1rem; margin-left:5px">
                                        <a>   Tr </a>
                                    </td>
                                    <td>
                                        <input type="text" id="InputC_@u.XID" style="width:3rem" value="@u.Transparency" onchange="updateXForms(@u.XID)"/>
                                    </td>
                                </tr>
                            </Table>

                            <table style="margin-left:15px">
                                <tr id="xid_@u.XID" class="xid_row">
                                    <td>
                                        <a onclick="removeTransform(@u.XID);"><i class="fas fa-trash-alt" style="color:dodgerblue;"></i></a>
                                    </td>
                                    <td id="xid_edit_button_@u.XID">
                                        <a onclick="editSelectionOption('xid', @u.XID);"><i class="fas fa-edit" style="color:dodgerblue;"></i></a>
                                    </td>
                                    <td id="xid_save_button_@u.XID" style="display:none;">
                                        <a onclick="saveSelectionOption('xid', @u.XID);"><i class="fas fa-save" style="color:dodgerblue;"></i></a>
                                    </td>
                                    <td>
                                        <span id="xid_display_@u.XID">@u.XFormName</span>
                                        <span id="xid_edit_@u.XID" style="display:none;"><input id="xid_input_@u.XID" type="text" value="@u.XFormName" /></span>
                                    </td>

                                </tr>
                                <tr>
                                    <td style="width:1rem; margin-left:5px">
                                        <a>   Z </a>
                                    </td>
                                    <td>
                                        <input type="text" id="InputZ_@u.XID" style="width:3rem" value="@u.ZOrder" onchange="updateXForms(@u.XID)"/>
                                    </td>
                                </tr>
                            </table>                            
                        }
                        else
                        {
                            <img src="..." class="xform-thumbnail" alt="...">
                        }
                    </div>
                }

            </div>

        </td>

        <td style="vertical-align:top; border-collapse: collapse;">

            @*------------------------------   Column 3  -------------------------------*@
            <form method="post" class="imageUpload" id="imageUpload" enctype="multipart/form-data" action="ie">
                <a onclick="document.getElementById('imageInput').click()"><i class="fas fa-upload" style="color: dodgerblue;"></i></a>
                <input type="file" id="imageInput" name="ImageFile" onchange="this.form.submit()" style="display:none" />
                @*<input type="submit" value="Upload" />*@
                @*<input type="text" id="FileName" style="display: none" value="" />*@
            </form>

            <script type="text/javascript">
                function UploadImage() {
                    console.log("UploadMe");
                    document.getElementById("imageInput").click();
                    //document.getElementById('FileName'). = this.value.split('.')[1];
                    //this.form.imageUpload();
                }

                function GetOName(str) {
                    return offer.SelectionOptions[Integer.parseInt(str)].OName;
                }
            </script>

            <div class="upload-list">
                @foreach (var u in offer.Uploads)
                {
                    <div class="card" draggable="true">
                        @if (!string.IsNullOrEmpty(u.Name))
                        {
                            <img src="~/img/@u.Name" class="xform-thumbnail" alt="...">
                        }
                        else
                        {
                            <img src="..." class="xform-thumbnail" alt="...">
                        }
                        <a onclick="addXForms(@u.UID, @offer.OID);"><i class="fas fa-arrow-alt-circle-left" style="color: dodgerblue;"></i></a>

                    </div>
                }
            </div>

        </td>
    </tr>
</table>

<script type="text/javascript">

    function editSelectionOption(IDtype, ID) {
        document.getElementById(`${IDtype}_display_${ID}`).style.display = "none";
        document.getElementById(`${IDtype}_edit_${ID}`).style.display = "block";
        document.getElementById(`${IDtype}_edit_button_${ID}`).style.display = "none";
        document.getElementById(`${IDtype}_save_button_${ID}`).style.display = "block";
    }

    function saveSelectionOption(IDtype, ID) {
        document.getElementById(`${IDtype}_display_${ID}`).style.display = "block";
        document.getElementById(`${IDtype}_edit_${ID}`).style.display = "none";
        document.getElementById(`${IDtype}_edit_button_${ID}`).style.display = "block";
        document.getElementById(`${IDtype}_save_button_${ID}`).style.display = "none";
        document.getElementById(`${IDtype}_display_${ID}`).innerHTML = document.getElementById(`${IDtype}_input_${ID}`).value;
    }

    function visibleSelectionOption(IDtype, XID) {
        //Swap buttons
        document.getElementById(`${IDtype}_visible_button_${XID}`).style.display = "none";
        document.getElementById(`${IDtype}_hidden_button_${XID}`).style.display = "block";

        //Show Xform
        document.getElementById(`XFImg_${XID}`).style.display = "none";

        //Save new state in memory
        ////document.getElementById(GetItemID(XID)).attributes["data-xfvisible"].value = "block";
        ClrItemSel(XID, true);

        for (let drag of dragtool) { drag.style.opacity = 0; }
    }

    function hiddenSelectionOption(IDtype, XID) {
        //Swap buttons
        document.getElementById(`${IDtype}_hidden_button_${XID}`).style.display = "none";
        document.getElementById(`${IDtype}_visible_button_${XID}`).style.display = "block";

        //Hide Xform
        document.getElementById(`XFImg_${XID}`).style.display = "block";

        //Save new state in memory
        ////document.getElementById(GetItemID(XID)).attributes["data-xfvisible"].value = "none";
        ClrItemSel(XID, false);

        for (let drag of dragtool) { drag.style.opacity = 0; }
    }

    function ClrItemSel(XID,Set) {
        ItemID = document.getElementById(`ItemSID`).attributes["data-ItemSelID"].value
        XFormSel = document.getElementById(ItemID).attributes["data-xformsel"].value
        let IXbit = parseInt(document.getElementById(`XIDcard_${XID}`).attributes["data-IXbit"].value);
        let OrN = 2 ** (IXbit - 1);       
        XFormSel = XFormSel | OrN;
        if (Set) { XFormSel = XFormSel - OrN; }
        document.getElementById(ItemID).attributes["data-xformsel"].value = XFormSel;
    }

    function selectSOID(sid, soid) {
        for (let drag of dragtool) {drag.style.opacity = 0;}
        //set background color
        document.querySelectorAll(`#sid_${sid} .soid_row`).forEach(sr => {
            sr.style.backgroundColor = "";
        });
        document.getElementById(`soid_${soid}`).style.backgroundColor = 'rgba(150, 150, 200, 0.30)';


        console.log("sid " + sid);
        console.log("soid " + soid);
        console.log(`sid_${sid}`);

        //set soid ID
        document.getElementById(`sid_${sid}`).attributes["data-soid"].value = soid;

        //set ItemSelection ID
        document.getElementById(`ItemSID`).attributes["data-ItemSelID"].value = "";
        document.querySelectorAll('.SIDcard').forEach(s => {
            document.getElementById(`ItemSID`).attributes["data-ItemSelID"].value = document.getElementById(`ItemSID`).attributes["data-ItemSelID"].value + "." + s.attributes["data-soid"].value;
        });


        //Load Item XForm Selection Visible Selections
        document.querySelectorAll('.XIDcard').forEach(s => {
            let sXID = s.attributes["data-xid"].value;

            ItemID = document.getElementById(`ItemSID`).attributes["data-ItemSelID"].value
            XFormSel = document.getElementById(ItemID).attributes["data-xformsel"].value
            let IXbit = parseInt(s.attributes["data-IXbit"].value);
            let OrN = 2 ** (IXbit - 1);
            XFormSel = XFormSel & OrN;

            if (XFormSel > 0)
            {
                console.log("none");
                 hiddenSelectionOption('xid', sXID);
            } else
            {
                console.log("blocked");
                visibleSelectionOption('xid', sXID);                
            }

        });



    }
</script>

@*------------------------------   Mouse Control  -------------------------------*@
<script>
    //const el = document.querySelector(".XFImg");
    let el;
    let eXID;
    let isResizing = false;
    let elAngle = 0;

    const XFe = document.querySelectorAll('.XFImg').forEach(x => {
        x.addEventListener("mouseenter", function (e) {
            if (isResizing) return false;
            el = e.target;
            eXID = parseInt(e.target.attributes["data-xid"].value);
            console.log("mouseOVER " + eXID);

            for (let drag of dragtool) {
                dXID = parseInt(drag.attributes["data-dxid"].value);
                if (dXID == eXID) { drag.style.opacity = 1; } else { drag.style.opacity = 0;}
            }
        }, false);

        x.addEventListener("mouseout", function (e) {
            //e.target.style.opacity = "1.0";
            console.log("mouseOUT ");
            //for (let drag of dragtool) {drag.style.opacity = 0;}
        }, false);

        x.addEventListener("mousedown", mousedown);
    });


    function mousedown(e) {
        window.addEventListener("mousemove", mousemove);
        window.addEventListener('mouseup', mouseup);

        elAngle = el.attributes["data-rotation"].value;

        let prevX = e.clientX;
        let prevY = e.clientY;
        console.log("e class list :" + e.target.classList)

        //document.querySelectorAll('.XFImg').forEach(xf => {
        //    xf.style.zIndex = 100;
        //});

        //el.style.zIndex = 2000;

        function mousemove(e) {
            if (isResizing) return false;
            el.style.transform = 'rotate(' + 0 + 'deg)';

            let newX = prevX - e.clientX;
            let newY = prevY - e.clientY;

            const rect = el.getBoundingClientRect();
            el.style.left = rect.left - newX + "px";
            el.style.top = rect.top - newY + "px";
            prevX = e.clientX;
            prevY = e.clientY;

            el.style.transform = 'rotate(' + elAngle + 'deg)';
            console.log("mouse move !! " + elAngle);


            console.log(" eXID: " + eXID);
            console.log(" ID: " + el.id);

            console.log("TT: " + el.style.top);
            console.log("LL: " + el.style.left);

            document.getElementById("InputT_" + eXID).value = el.style.top;
            document.getElementById("InputL_" + eXID).value = el.style.left;
        }

        function mouseup() {
            window.removeEventListener("mousemove", mousemove);
            window.removeEventListener('mouseup', mouseup);
            for (let drag of dragtool) {drag.style.opacity = 0;}
        }
    }

    const dragtool = document.querySelectorAll('.drag');

    let currentdrag;

    for (let drag of dragtool) {
        drag.addEventListener("mousedown", mousedown);

        function doubleclick(e) {
            elAngle = 0;
        }

        function mousedown(e) {
            console.log("currentdrag class list :" + e.target.classList)

            currentdrag = e.target;
            isResizing = true;

            let prevX = e.clientX;
            let prevY = e.clientY;
            let scaleC = el.getBoundingClientRect().width / el.getBoundingClientRect().height;


            window.addEventListener("mousemove", mousemove);
            window.addEventListener("mouseup", mouseup);

            function mousemove(e) {
                el.style.transform = 'rotate(' + 0 + 'deg)';
                const rect = el.getBoundingClientRect();
                let dX = prevX - e.clientX
                let dY = prevY - e.clientY
                let rA = elAngle * Math.PI / 180;

                let rX = dX * Math.cos(rA) + dY * Math.sin(rA);
                let rY = -dX * Math.sin(rA) + dY * Math.cos(rA);

                dX = rX;
                dY = rY;


                console.log(" dX:" + dX + "       dY:" + dY);
                console.log("class list :" + currentdrag.classList)

                if (currentdrag.classList.contains('sc')) { dX = scaleC * dY; }

                if (currentdrag.classList.contains('rt')) {

                    elAngle = elAngle - dX;
                    if (elAngle > 360) { elAngle = elAngle - 360; }
                    if (elAngle < 0) { elAngle = elAngle + 360; }
                    el.style.transform = 'rotate(' + elAngle + 'deg)';
                    console.log(" elAngle:" + elAngle);


                }

                if (currentdrag.classList.contains('nw') || currentdrag.classList.contains('n') || currentdrag.classList.contains('ne')) {
                    el.style.height = rect.height + dY + "px";
                    el.style.top = rect.top - dY + "px";
                }

                if (currentdrag.classList.contains('ne') || currentdrag.classList.contains('e') || currentdrag.classList.contains('se') || currentdrag.classList.contains('sc')) {
                    el.style.width = rect.width - dX + "px";
                }

                if (currentdrag.classList.contains('se') || currentdrag.classList.contains('s') || currentdrag.classList.contains('sw') || currentdrag.classList.contains('sc')) {
                    el.style.height = rect.height - dY + "px";
                }


                if (currentdrag.classList.contains('sw') || currentdrag.classList.contains('w') || currentdrag.classList.contains('nw')) {
                    el.style.width = rect.width + dX + "px";
                    el.style.left = rect.left - dX + "px";
                }

                prevX = e.clientX;
                prevY = e.clientY;
                el.style.transform = 'rotate(' + elAngle + 'deg)';

                console.log(" eXID: " + eXID);
                console.log(" ID: " + el.id);

                console.log("T: " + el.style.top);
                console.log("L: " + el.style.left);
                console.log("W: " + el.style.width);
                console.log("H: " + el.style.height);
                console.log("R: " + elAngle);

                document.getElementById("InputT_" + eXID).value = el.style.top;
                document.getElementById("InputL_" + eXID).value = el.style.left;
                document.getElementById("InputW_" + eXID).value = el.style.width;
                document.getElementById("InputH_" + eXID).value = el.style.height;
                document.getElementById("InputR_" + eXID).value = elAngle;
            }

            function mouseup() {
                window.removeEventListener("mousemove", mousemove);
                window.removeEventListener("mouseup", mouseup);
                el.attributes["data-rotation"].value = elAngle;
                isResizing = false;
                for (let drag of dragtool) {drag.style.opacity = 0;}
            }
        }
    }

</script>

<script type="text/javascript">

    function updateXForms(ID) {
        console.log("updateXForms, XID " + ID);
        e = document.getElementById("XFImg_" + ID);
        e.style.top = document.getElementById("InputT_" + ID).value + "px";
        e.style.left = document.getElementById("InputL_" + ID).value + "px";
        e.style.width = document.getElementById("InputW_" + ID).value + "px";
        e.style.height = document.getElementById("InputH_" + ID).value + "px";
        e.style.transform = 'rotate(' + document.getElementById("InputR_" + ID).value + 'deg)';
        e.style.opacity = document.getElementById("InputC_" + ID).value;
        e.style.zIndex = document.getElementById("InputZ_" + ID).value;
    }

    function saveXForms() {
        var xforms = [];
        console.log("Beg SAVE XForms");
        document.querySelectorAll('.XIDcard').forEach(x => {
            var xf = {};
            xf.xid = parseInt(x.attributes["data-xid"]?.value);
            xf.top = parseInt(document.getElementById("InputT_" + xf.xid).value);
            xf.left = parseInt(document.getElementById("InputL_" + xf.xid).value);
            xf.width = parseInt(document.getElementById("InputW_" + xf.xid).value);
            xf.height = parseInt(document.getElementById("InputH_" + xf.xid).value);
            xf.rotation = parseFloat(document.getElementById("InputR_" + xf.xid).value);
            xf.transparency = parseFloat(document.getElementById("InputC_" + xf.xid).value);
            xf.ZOrder = parseInt(document.getElementById("InputZ_" + xf.xid).value);
            xf.XFormName = document.getElementById("xid_display_" + xf.xid).value;
            console.log("data-xid! " + xf.xid);
            console.log("T " + document.getElementById("InputT_" + xf.xid).value);
            console.log("R " + document.getElementById("InputR_" + xf.xid).value);
            console.log("C " + document.getElementById("InputC_" + xf.xid).value);

            xforms.push(xf);
        });
        // console.log(xforms);
        // console.log(JSON.stringify(xforms));
        fetch("saveoffer", {
            method: "POST",
            body: JSON.stringify(xforms),
            headers: {
                "Content-type": "application/json"
            }
        }).then(resp => resp.json())
            .then(json => {
                console.log(json);
                //location.reload();
            });
        console.log("End SAVE XForms");
    }

    function addXForms(uid, oid) {
        var payload = {};
        payload.uid = uid;
        payload.oid = oid;

        fetch("addtransform", {
            method: "POST",
            body: JSON.stringify(payload),
            headers: {
                "Content-type": "application/json"
            }
        }).then(resp => resp.json())
            .then(json => {
                console.log(json)
                location.reload();
            })
    }
    function removeTransform(xid) {
        fetch("removetransform", {
            method: "POST",
            body: xid,
            headers: {
                "Content-type": "application/json"
            }
        }).then(json => {
            console.log(json);
            location.reload();
        });
    }



    selectSOID(2, 4);
    selectSOID(3, 6);


</script>
