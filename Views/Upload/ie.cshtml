@using ProductPage.Data

@{
    ViewData["Title"] = "ie";
    var offer = Model as OfferModel;
    //var xforms = Model as List<XForm>;
    /*var uploads = */
    //struct contextVar
    //{
    //    int x;

    //    var uploads = Model as List<Upload>;
    //    var xforms = Model as List<XForm>;
    //};
    //var xforms = Model as List<XForm>;
    //var xforms = Model as List<XForm>;
}
@{
}

<h1>ie</h1>


<form method="post" enctype="multipart/form-data" action="ie">

    <input type="file" name="ImageFile" onchange="document.getElementById('FileName').value = this.value.split('.')[1];" />
    <input type="submit" value="Upload" />
    <input type="text" id="FileName" value="" />
</form>



<style>
    .itm {
        height: 100px;
        width: 100px;
        position: absolute;
        background-color: none;
        object-fit: contain;
        cursor: move;
        -webkit-user-drag: none;
        -khtml-user-drag: none;
        -moz-user-drag: none;
        -o-user-drag: none;
        user-drag: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -o-user-select: none;
        user-select: none;
    }

    .image01 {
        height: 100%;
        width: 100%;
        /*        object-fit:inherit;*/
        transform: rotate(0deg);
    }

    img {
        -webkit-user-drag: none;
        -khtml-user-drag: none;
        -moz-user-drag: none;
        -o-user-drag: none;
        user-drag: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -o-user-select: none;
        user-select: none;
    }

    .drag {
        position: absolute;
        width: 5px;
        height: 5px;
        border: thin;
        background-color: none;
        z-index: 2;
        border-style: solid;
        border-color: cornflowerblue;
    }

        .drag.nw {
            top: -1px;
            left: -1px;
            cursor: nw-resize;
            border-bottom-style: none;
            border-right-style: none;
        }

        .drag.n {
            top: -1px;
            left: 50%;
            cursor: n-resize;
            border-bottom-style: none;
            border-right-style: none;
            border-left-style: none;
        }

        .drag.ne {
            top: -1px;
            right: -1px;
            cursor: ne-resize;
            border-bottom-style: none;
            border-left-style: none;
        }

        .drag.e {
            top: 50%;
            right: -1px;
            cursor: e-resize;
            border-top-style: none;
            border-bottom-style: none;
            border-left-style: none;
        }

        .drag.se {
            bottom: -1px;
            right: -1px;
            cursor: se-resize;
            border-top-style: none;
            border-left-style: none;
        }

        .drag.s {
            bottom: -1px;
            left: 50%;
            cursor: s-resize;
            border-top-style: none;
            border-right-style: none;
            border-left-style: none;
        }

        .drag.sw {
            bottom: -1px;
            left: -1px;
            cursor: sw-resize;
            border-top-style: none;
            border-right-style: none;
        }

        .drag.w {
            top: 50%;
            left: -1px;
            cursor: w-resize;
            border-top-style: none;
            border-bottom-style: none;
            border-right-style: none;
        }

        .drag.sc {
            bottom: 8px;
            right: 8px;
            cursor: grab;
            border-radius: 5px;
            background-color: tomato;
            border-style: none;
        }

        .drag.rt {
            top: -15px;
            left: 50%;
            cursor: grab;
            border-radius: 5px;
            background-color: none;
            border: double;
            border-color: cornflowerblue;
            border-bottom-style: none;
        }

    .canvas {
        border: 3px solid dodgerblue;
        height: 20rem;
        width: 20rem;
        float: left;
    }

    .upload-list {
        float: right;
    }

    .xform-thumbnail {
        width: 100px;
    }

    #bob {
        color:red;
    }

    [data-xid="6"] {
        color:purple;
        background-color:yellow;
    }

    .xform-list > [data-xid] {
        color:green;
        background-color:pink;
    }
</style>

<div>
    <a href="#" id="bob" onclick="saveXForms()">SAVE BUTTON</a>
</div>
<div class="upload-list">
    @foreach (var u in offer.Uploads)
    {
        <div class="card" style="width: 18rem;">
            @if (!string.IsNullOrEmpty(u.Name))
            {
                <img src="~/img/@u.Name" class="xform-thumbnail" alt="...">
            }
            else
            {
                <img src="..." class="xform-thumbnail" alt="...">
            }


        </div>
    }

</div>

<div class="xform-list">
    @foreach (var u in offer.XForms)
    {
        <div class="card frmimg" data-xid="@u.XID" data-height="@u.Height" data-top="@u.Top" data-left="@u.Left" 
             data-width="@u.Width" style="width: 18rem;" onclick="incrementHeight(this)">
            @if (u.UID != null && u.UID > 0)
            {
                <img src="~/img/@offer.Uploads.FirstOrDefault(x=>x.UID==u.UID).Name" class="xform-thumbnail" alt="...">
                @offer.Uploads.FirstOrDefault(x => x.UID == u.UID).Name

        <span style="margin-left:10px;">w:@u.Width</span>
        <span style="margin-left:10px;">h:@u.Height</span>
            }
            else
            {
                <img src="..." class="xform-thumbnail" alt="...">
            }
        </div>
    }

</div>



<div class="selection-list">
    @foreach (var u in offer.Selections)
    {
        <div class="card frmimg" data-sid="@u.SID" style="width: 18rem;">


            @*@uploads.UploadList.FirstOrDefault(x => x.UID == u.UID).Name*@
            @u.Option


        </div>
    }

</div>

<div class="xformselection-list">
        @foreach (var u in offer.XFormSelections)
        {
            <div class="card frmimg" data-xid="@u.XID" style="width: 18rem;">


                @offer.XForms.FirstOrDefault(x => x.XID == u.XID).XFormName
                @u.SelectionSet


            </div>
        }

    </div>

@*@foreach (UploadModel upload in Model.UploadModel)
    {
        <tr>
            <td>@upload.Name</td>
        </tr>
    }*@

@*<div class="xform-list">
        @foreach (var x in xforms)
        {
            <div class="card" style="width: 18rem;">
                @if (!string.IsNullOrEmpty(x.XFormName))
                {
                    <img src="~/img/@x.XFormName" class="card-img-top" alt="...">
                }
                else
                {
                    <img src="..." class="card-img-top" alt="...">
                }


            </div>
        }

    </div>*@


<div class="canvas">
    <div class="itm">
        <div class="drag nw"></div>
        <div class="drag n"></div>
        <div class="drag ne"></div>
        <div class="drag e"></div>
        <div class="drag se"></div>
        <div class="drag s"></div>
        <div class="drag sw"></div>
        <div class="drag w"></div>
        <div class="drag sc"></div>
        <div class="drag rt"></div>

        <img src="~/img/grid.jpg" class="image01">

    </div>
</div>

@*<div class="xform-list">

        @foreach (var x in xforms)
        {
            <div class="card" style="width: 18rem;">
                @if (!string.IsNullOrEmpty(x.XFormName))
                {
                    <p>x.XFormName</p>
                }
                else
                {
                    <p>Unnamed</p>
                }


            </div>
        }

    </div>*@

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>

    const el = document.querySelector(".itm");
    const elImg = document.querySelector(".image01");

    let isResizing = false;
    let elAngle = 0;

    el.addEventListener("mousedown", mousedown);

    function mousedown(e) {
        window.addEventListener("mousemove", mousemove);
        window.addEventListener('mouseup', mouseup);

        let prevX = e.clientX;
        let prevY = e.clientY;


        function mousemove(e) {
            if (isResizing) return false;
            el.style.transform = 'rotate(' + 0 + 'deg)';

            let newX = prevX - e.clientX;
            let newY = prevY - e.clientY;

            const rect = el.getBoundingClientRect();
            el.style.left = rect.left - newX + "px";
            el.style.top = rect.top - newY + "px";
            prevX = e.clientX;
            prevY = e.clientY;
            el.style.transform = 'rotate(' + elAngle + 'deg)';

        }

        function mouseup() {
            window.removeEventListener("mousemove", mousemove);
            window.removeEventListener('mouseup', mouseup);
        }
    }

    const dragtool = document.querySelectorAll('.drag');

    let currentdrag;

    for (let drag of dragtool) {
        drag.addEventListener("mousedown", mousedown);


        function doubleclick(e) {
            elAngle = 0;


        }


        function mousedown(e) {
            currentdrag = e.target;
            isResizing = true;

            let prevX = e.clientX;
            let prevY = e.clientY;
            let scaleC = el.getBoundingClientRect().width / el.getBoundingClientRect().height;


            window.addEventListener("mousemove", mousemove);
            window.addEventListener("mouseup", mouseup);

            function mousemove(e) {
                el.style.transform = 'rotate(' + 0 + 'deg)';
                const rect = el.getBoundingClientRect();
                let dX = prevX - e.clientX
                let dY = prevY - e.clientY
                let rA = elAngle * Math.PI / 180;

                let rX = dX * Math.cos(rA) + dY * Math.sin(rA);
                let rY = -dX * Math.sin(rA) + dY * Math.cos(rA);

                dX = rX;
                dY = rY;


                console.log(" dX:" + dX + "       dY:" + dY);

                if (currentdrag.classList.contains('sc')) { dX = scaleC * dY; }

                if (currentdrag.classList.contains('rt')) {

                    elAngle = elAngle - dX;
                    if (elAngle > 360) { elAngle = elAngle - 360; }
                    if (elAngle < 0) { elAngle = elAngle + 360; }
                    el.style.transform = 'rotate(' + elAngle + 'deg)';
                    console.log(" elAngle:" + elAngle);


                }

                if (currentdrag.classList.contains('nw') || currentdrag.classList.contains('n') || currentdrag.classList.contains('ne')) {
                    el.style.height = rect.height + dY + "px";
                    el.style.top = rect.top - dY + "px";
                }

                if (currentdrag.classList.contains('ne') || currentdrag.classList.contains('e') || currentdrag.classList.contains('se') || currentdrag.classList.contains('sc')) {
                    el.style.width = rect.width - dX + "px";
                }

                if (currentdrag.classList.contains('se') || currentdrag.classList.contains('s') || currentdrag.classList.contains('sw') || currentdrag.classList.contains('sc')) {
                    el.style.height = rect.height - dY + "px";
                }


                if (currentdrag.classList.contains('sw') || currentdrag.classList.contains('w') || currentdrag.classList.contains('nw')) {
                    el.style.width = rect.width + dX + "px";
                    el.style.left = rect.left - dX + "px";
                }

                prevX = e.clientX;
                prevY = e.clientY;
                el.style.transform = 'rotate(' + elAngle + 'deg)';
            }

            function mouseup() {
                window.removeEventListener("mousemove", mousemove);
                window.removeEventListener("mouseup", mouseup);
                isResizing = false;
            }
        }
    }

</script>
<script>
    //$(document).ready(function () {
    //    //function will be called on button click having id btnsave
    //    $(".frmimg").click(function () {
    //        var Xid = $(this).data("xid");
    //        var width = $(this).data("width");
    //        $.ajax(
    //            {
    //                type: "POST", //HTTP POST Method
    //                url: "Upload/UpdateWidth", // Controller/View
    //                data: { //Passing data
    //                    Xid: Xid
    //                    //    City: $("#txtAddress").val(),
    //                    //    Address: $("#txtcity").val()
    //                },
    //                success: function () {
    //                    location.reload();
    //                }

    //            });

    //    });
    //});

</script>
<script type="text/javascript">
    function incrementHeight(el) {
        var currHeight = parseInt(el.attributes["data-height"].value);
        el.attributes["data-height"].value = currHeight + 10;
        alert(el.attributes["data-height"].value);
    }
    function saveXForms() {
        var xforms = [];
        document.querySelectorAll('.xform-list > [data-xid]').forEach(x => {
            var xf = {};
            xf.xid = parseInt(x.attributes["data-xid"]?.value);
            xf.top = parseInt(x.attributes["data-top"]?.value);
            xf.left = parseInt(x.attributes["data-left"]?.value);
            xf.width = parseInt(x.attributes["data-width"]?.value);
            xf.height = parseInt(x.attributes["data-height"]?.value);
            xforms.push(xf);
        });
        // console.log(xforms);
        // console.log(JSON.stringify(xforms));

        fetch("saveoffer", {
            method: "POST",
            body: JSON.stringify(xforms),
            headers: {
                "Content-type": "application/json"
            }
        }).then(resp => resp.json())
            .then(json => {
                console.log(json);
                location.reload();
            });
    }
</script>

